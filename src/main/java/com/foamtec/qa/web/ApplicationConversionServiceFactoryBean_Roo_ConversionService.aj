// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.foamtec.qa.web;

import com.foamtec.qa.domain.DocumentHistory;
import com.foamtec.qa.domain.FaRequest;
import com.foamtec.qa.domain.Material;
import com.foamtec.qa.domain.Tooling;
import com.foamtec.qa.domain.TypeOfRequest;
import com.foamtec.qa.security.AppUser;
import com.foamtec.qa.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<DocumentHistory, String> ApplicationConversionServiceFactoryBean.getDocumentHistoryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.foamtec.qa.domain.DocumentHistory, java.lang.String>() {
            public String convert(DocumentHistory documentHistory) {
                return new StringBuilder().append(documentHistory.getCreateDate()).append(' ').append(documentHistory.getCreateBy()).append(' ').append(documentHistory.getActionType()).append(' ').append(documentHistory.getStatus()).toString();
            }
        };
    }
    
    public Converter<Long, DocumentHistory> ApplicationConversionServiceFactoryBean.getIdToDocumentHistoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.foamtec.qa.domain.DocumentHistory>() {
            public com.foamtec.qa.domain.DocumentHistory convert(java.lang.Long id) {
                return DocumentHistory.findDocumentHistory(id);
            }
        };
    }
    
    public Converter<String, DocumentHistory> ApplicationConversionServiceFactoryBean.getStringToDocumentHistoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.foamtec.qa.domain.DocumentHistory>() {
            public com.foamtec.qa.domain.DocumentHistory convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DocumentHistory.class);
            }
        };
    }
    
    public Converter<FaRequest, String> ApplicationConversionServiceFactoryBean.getFaRequestToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.foamtec.qa.domain.FaRequest, java.lang.String>() {
            public String convert(FaRequest faRequest) {
                return new StringBuilder().append(faRequest.getCreateDate()).append(' ').append(faRequest.getCreateBy()).append(' ').append(faRequest.getFaNumber()).append(' ').append(faRequest.getProductGroup()).toString();
            }
        };
    }
    
    public Converter<Long, FaRequest> ApplicationConversionServiceFactoryBean.getIdToFaRequestConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.foamtec.qa.domain.FaRequest>() {
            public com.foamtec.qa.domain.FaRequest convert(java.lang.Long id) {
                return FaRequest.findFaRequest(id);
            }
        };
    }
    
    public Converter<String, FaRequest> ApplicationConversionServiceFactoryBean.getStringToFaRequestConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.foamtec.qa.domain.FaRequest>() {
            public com.foamtec.qa.domain.FaRequest convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), FaRequest.class);
            }
        };
    }
    
    public Converter<Material, String> ApplicationConversionServiceFactoryBean.getMaterialToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.foamtec.qa.domain.Material, java.lang.String>() {
            public String convert(Material material) {
                return new StringBuilder().append(material.getName()).append(' ').append(material.getBatchNumber()).toString();
            }
        };
    }
    
    public Converter<Long, Material> ApplicationConversionServiceFactoryBean.getIdToMaterialConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.foamtec.qa.domain.Material>() {
            public com.foamtec.qa.domain.Material convert(java.lang.Long id) {
                return Material.findMaterial(id);
            }
        };
    }
    
    public Converter<String, Material> ApplicationConversionServiceFactoryBean.getStringToMaterialConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.foamtec.qa.domain.Material>() {
            public com.foamtec.qa.domain.Material convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Material.class);
            }
        };
    }
    
    public Converter<Tooling, String> ApplicationConversionServiceFactoryBean.getToolingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.foamtec.qa.domain.Tooling, java.lang.String>() {
            public String convert(Tooling tooling) {
                return new StringBuilder().append(tooling.getToolingType()).append(' ').append(tooling.getCarvity()).append(' ').append(tooling.getVendorName()).toString();
            }
        };
    }
    
    public Converter<Long, Tooling> ApplicationConversionServiceFactoryBean.getIdToToolingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.foamtec.qa.domain.Tooling>() {
            public com.foamtec.qa.domain.Tooling convert(java.lang.Long id) {
                return Tooling.findTooling(id);
            }
        };
    }
    
    public Converter<String, Tooling> ApplicationConversionServiceFactoryBean.getStringToToolingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.foamtec.qa.domain.Tooling>() {
            public com.foamtec.qa.domain.Tooling convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Tooling.class);
            }
        };
    }
    
    public Converter<TypeOfRequest, String> ApplicationConversionServiceFactoryBean.getTypeOfRequestToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.foamtec.qa.domain.TypeOfRequest, java.lang.String>() {
            public String convert(TypeOfRequest typeOfRequest) {
                return new StringBuilder().append(typeOfRequest.getName()).append(' ').append(typeOfRequest.getQty()).append(' ').append(typeOfRequest.getTool()).toString();
            }
        };
    }
    
    public Converter<Long, TypeOfRequest> ApplicationConversionServiceFactoryBean.getIdToTypeOfRequestConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.foamtec.qa.domain.TypeOfRequest>() {
            public com.foamtec.qa.domain.TypeOfRequest convert(java.lang.Long id) {
                return TypeOfRequest.findTypeOfRequest(id);
            }
        };
    }
    
    public Converter<String, TypeOfRequest> ApplicationConversionServiceFactoryBean.getStringToTypeOfRequestConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.foamtec.qa.domain.TypeOfRequest>() {
            public com.foamtec.qa.domain.TypeOfRequest convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TypeOfRequest.class);
            }
        };
    }
    
    public Converter<AppUser, String> ApplicationConversionServiceFactoryBean.getAppUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.foamtec.qa.security.AppUser, java.lang.String>() {
            public String convert(AppUser appUser) {
                return new StringBuilder().append(appUser.getUsername()).append(' ').append(appUser.getPassword()).append(' ').append(appUser.getName()).append(' ').append(appUser.getDepartment()).toString();
            }
        };
    }
    
    public Converter<Long, AppUser> ApplicationConversionServiceFactoryBean.getIdToAppUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.foamtec.qa.security.AppUser>() {
            public com.foamtec.qa.security.AppUser convert(java.lang.Long id) {
                return AppUser.findAppUser(id);
            }
        };
    }
    
    public Converter<String, AppUser> ApplicationConversionServiceFactoryBean.getStringToAppUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.foamtec.qa.security.AppUser>() {
            public com.foamtec.qa.security.AppUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AppUser.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getDocumentHistoryToStringConverter());
        registry.addConverter(getIdToDocumentHistoryConverter());
        registry.addConverter(getStringToDocumentHistoryConverter());
        registry.addConverter(getFaRequestToStringConverter());
        registry.addConverter(getIdToFaRequestConverter());
        registry.addConverter(getStringToFaRequestConverter());
        registry.addConverter(getMaterialToStringConverter());
        registry.addConverter(getIdToMaterialConverter());
        registry.addConverter(getStringToMaterialConverter());
        registry.addConverter(getToolingToStringConverter());
        registry.addConverter(getIdToToolingConverter());
        registry.addConverter(getStringToToolingConverter());
        registry.addConverter(getTypeOfRequestToStringConverter());
        registry.addConverter(getIdToTypeOfRequestConverter());
        registry.addConverter(getStringToTypeOfRequestConverter());
        registry.addConverter(getAppUserToStringConverter());
        registry.addConverter(getIdToAppUserConverter());
        registry.addConverter(getStringToAppUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
